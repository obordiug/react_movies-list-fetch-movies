{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/getMovie.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","url","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","FindMovie","onAdd","useState","setTitle","setMovie","error","setError","onSubmit","event","preventDefault","Response","htmlFor","type","id","placeholder","classNames","value","onChange","target","onFocus","onClick","movieFromServer","App","setMovies","findIndex","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4a1cc6d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=4cadda20&t';\n\nfunction request(url: string) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(`${response.status}-${response.statusText}`));\n      }\n\n      return response.json();\n    });\n}\n\nexport const getMovie = (title: string): Promise<Movie> => request(`=${title}`);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/getMovie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd:(movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleRequest = () => {\n    getMovie(title)\n      .then(movieFromServer => {\n        if (movieFromServer.Response === 'False') {\n          setMovie(null);\n          setError(true);\n        }\n\n        setMovie(movieFromServer);\n      });\n  };\n\n  const handleFocus = () => {\n    setError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (movie?.Response === 'True') {\n      onAdd(movie);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <div className=\"control\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': error })}\n                value={title}\n                onChange={handleTitleChange}\n                onFocus={handleFocus}\n              />\n            </label>\n          </div>\n\n          {error && (\n            <p className=\"error\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie?.Response === 'True' && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const index = movies.findIndex(item => item.imdbID === movie.imdbID);\n\n    if (index === -1) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}